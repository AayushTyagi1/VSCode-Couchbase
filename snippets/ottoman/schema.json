{
    "Create Index": {
        "prefix": [
            "@cbotind"
        ],
        "body": [
            "${1:Schema}.index.${2:name} = {",
            "  by : ${3:field},",
            "  type : ${4:indexType }",
            "}"
        ],
        "description": ""
    },
    "Create N1QL Index With Options": {
        "prefix": [
            "@cbotnqlind"
        ],
        "body": [
            "${1:Schema}.index.${2:name} = {",
            "  by : ${3:field},",
            "  options : ${4:filter},",
            "  type : ${5|'n1ql','refdoc'|}",
            "}"
        ],
        "description": ""
    },
    "Generate Model and Schema": {
        "prefix": [
            "@cbotgenmodel"
        ],
        "body": [
            "const { model, Schema } = require('ottoman');",
            "",
            "const ${1:schema} = new Schema({",
            "  ${2:field1}: { type: ${3|String,Number,Boolean,Date|}, required: true },",
            "  ${4:field2}: { type: ${5|String,Number,Boolean,Date|}, required: true },",
            "  ${6:field3}: { type: ${7|String,Number,Boolean,Date|}, required: true },",
            "",
            "});",
            "const ${8:model} = ottoman.model('${9:modelname}', ${1:schema}, {collectionName : '${9:modelname}s', scopeName : '${10:_default}', idKey: '${11:__id}'});",
            "",
            "module.exports = {",
            "  ${8:model}",
            "}"
        ],
        "description": "Generate a model and a schema"
    },
    "Generate Schema": {
        "prefix": [
            "@cbotschema"
        ],
        "body": [
            "const { model, Schema } = require('ottoman');",
            "",
            "const ${1:schema} = new Schema({",
            "  ${2:field1}: { type: ${3|String,Number,Boolean,Date|}, required: true },",
            "  ${4:field2}: { type: ${5|String,Number,Boolean,Date|}, required: true },",
            "  ${6:field3}: { type: ${7|String,Number,Boolean,Date|}, required: true },",
            "",
            "});"
        ],
        "description": "Generate a schema"
    },
    "Generate Model and SQL++ Index": {
        "prefix": [
            "@cbotmodel"
        ],
        "body": [
            "const ${1:model} = ottoman.model('${2:modelname}', ${3:schema}, {collectionName : '${2:modelname}s', scopeName : '${4:_default}', idKey: '${5:__id}'});",
            "",
            "module.exports = {",
            "  ${1:model}",
            "}",
            "",
            "${3:Schema}.index.${6:name} = {",
            "  by : ${7:field},",
            "  options : ${8:filter},",
            "  type : ${9|'n1ql','refdoc'|}",
            "}"
        ],
        "description": "Generate a model and an SQL++ index"
    },
    "Model Field": {
        "prefix": [
            "@cbotfield"
        ],
        "body": [
            "${2:field}: { type: ${3|String,Number,Boolean,Date|}, required: true },"
        ],
        "description": "Generate a model field"
    },
    "Model Field with all Options": {
        "prefix": [
            "@cbotfieldopts"
        ],
        "body": [
            "${2:field}: { type: ${3|String,Number,Boolean,Date|}, required: ${4:true}, min:${5}, max:${6}, enum:[${7}], default:${8}},"
        ],
        "description": "Generate a model field with common options shown"
    }
}