{
    "Full Text Search": {
        "prefix": [
            "@cbfts"
        ],
        "body": [
            "async function ftsMatchWord(term) {",
            "    return await ${1:cluster}.searchQuery(",
            "        '${2:search-index}',",
            "        couchbase.SearchQuery.match(term)",
            "    )",
            "}",
            "",
            "var result: couchbase.SearchResult = await ftsMatchWord(${3:term})",
            "",
            "result.rows.forEach((hit, index) => {",
            "    //handle results",
            "})"
        ],
        "description": "Use a query string on the Full Text Search Service of your Couchbase Cluster."
    },
    "Full Text Search With all Options and Search Queries": {
        "prefix": [
            "@cbftsopts"
        ],
        "body": [
            "async function ftsMatchWord(term) {",
            "    return await ${1:cluster}.searchQuery(",
            "        '${2:search-index}',",
            "        couchbase.${3|MatchSearchQuery,MatchPhraseSearchQuery,RegexpSearchQuery,QueryStringSearchQuery,NumericRangeSearchQuery,DateRangeSearchQuery,ConjunctionSearchQuery,DisjunctionSearchQuery,BooleanSearchQuery,WildcardSearchQuery,DocIdSearchQuery,BooleanFieldSearchQuery,TermSearchQuery,PhraseSearchQuery,PrefixSearchQuery,MatchAllSearchQuery,MatchNoneSearchQuery,GeoDistanceSearchQuery,GeoBoundingBoxSearchQuery,GeoPolygonSearchQuery|}.match(term),",
            "        {",
            "            limit: ${4:5},",
            "            consistentWith: ${5:mutationState}, ",
            "        }",
            "    )",
            "}",
            "",
            "var result: couchbase.SearchResult = await ftsMatchWord(${6:term})",
            "",
            "result.rows.forEach((hit, index) => {",
            "    //handle results",
            "})"
        ],
        "description": "Create a FTS query that has all options shown to you."
    },
    "Full Text Search Import": {
        "prefix": [
            "@cbftsimp"
        ],
        "body": [
            "import * as couchbase from 'couchbase'"
        ],
        "description": "Import all necessary FTS namespaces"
    },
    "Full Text Search Example": {
        "prefix": [
            "@cbftsex"
        ],
        "body": [
            "import * as couchbase from 'couchbase'",
            "",
            "async function main() {",
            "    const cluster: couchbase.Cluster = await couchbase.connect('${2:connection-string}', {",
            "        username: '${3:username}',",
            "        password: '${4:password}',",
            "    })",
            "",
            "  var result: couchbase.SearchResult = await ftsMatchWord(cluster, ${5:term})",
            "",
            "  result.rows.forEach((hit, index) => {",
            "    //handle results",
            "  })",
            "}",
            "",
            "async function ftsMatchWord(cluster, term) {",
            "    return await cluster.searchQuery(",
            "        '${6:search-index}',",
            "        couchbase.SearchQuery.match(term)",
            "    )",
            "}"
        ],
        "description": "Example code that shows connecting to a cluster and running an FTS query on it."
    }
}